@page "/admin/collisions"
@page "/admin"
@inherits OwningComponentBase<ICollisionRepository>

<table class="table table-sm table-striped table-bordered">
    <thead>
        <tr>
            <th>Crash ID</th>
            <th>Time and Date of Crash</th>
            <th>City</th>
        </tr>
    </thead>

    <tbody>
        @if (CrashData?.Count() > 0)
        {
            // List crashes
            @foreach (Crash c in CrashData)
            {
                <tr>
                    <td>@c.CRASH_ID</td>
                    <td>@c.CRASH_DATETIME</td>
                    <td>@c.CITY</td>

                    <td>
                        <NavLink class="btn btn-info btn-sm" href="@GetDetailsUrl(c.CRASH_ID)">Details</NavLink>
                    </td>

                    <td>
                        <NavLink class="btn btn-warning btn-sm" href="@GetEditUrl(c.CRASH_ID)">Edit</NavLink>
                    </td>
                    <td>
                        <button class="btn btn-danger btnn-sm" @onclick="@(x => DeleteCollision(c))">Delete</button>
                    </td>

                </tr>
            }

        }
        else
        {
            <tr>
                <td colspan="5" class="text-center">No Collisions</td>
            </tr>
        }
    </tbody>

</table>


<NavLink class="btn btn-primary" href="/admin/collisions/create">Create</NavLink>

@code {

    public ICollisionRepository repo => Service;

    public IEnumerable<Crash> CrashData { get; set; }

    protected async override Task OnInitializedAsync()
    {
        await UpdateData();
    }

    public async Task UpdateData()
    {
        CrashData = await repo.Crashes.ToListAsync();
    }


    public string GetDetailsUrl(long id) => $"admin/collisions/details/{id}";
    public string GetEditUrl(long id) => $"admin/collisions/edit{id}";

    public async Task DeleteCollision(Crash c)
    {
        repo.DeleteCollision(c);
        await UpdateData();
    }


}
